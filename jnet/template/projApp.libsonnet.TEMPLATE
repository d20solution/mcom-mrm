{

  clientName:: error "serviceName must be specified",
  clientNamespace:: ["argocd",],
  clientADGroup:: [],
  clientProjname:: $.clientName + '-proj',
  clientRootname:: $.clientName + '-root',
  clientRootapprepo:: {},

  clientDestination+:: [
    { namespace: x, server: "https://kubernetes.default.svc" }, for x in $.clientNamespace
  ],

//  clientRwl+:: [
//    { group: x, kind: "*" }, for x in $.clientNamespace
//  ],

  clientNSwl+:: [
    { group: x, kind: "*" }, for x in $.clientNamespace
  ],



  local appProj = {
    apiVersion: "argoproj.io/v1alpha1",
    kind: "AppProject",
    metadata: {
      name: $.clientProjname,
      namespace: "argocd",
      annotations: {
        'argocd.argoproj.io/sync-wave': "-50",
      },
      finalizers: [
        'resources-finalizer.argocd.argoproj.io',
      ],
    },
    spec: {
       description: $.clientName + ' Project Spec',
       sourceRepos: [
          "*",
       ],
       destinations: $.clientDestination,
//       clusterResourceWhitelist: $.clientRwl,
       clusterResourceWhitelist: [
          {
             group: "*",
             kind: "*"
          },
       ],
       namespaceResourceWhitelist: $.clientNSwl,
       roles: [
          {
             name: "read-only",
             description: "Read-only privileges",
             "policies": [
               'p, proj:' + $.clientProjname + ':read-only, applications, get, ' + $.clientProjname + '/*, allow',
             ],
             "groups": $.clientADGroup,
          },
       ],
    },
  },

  local appRoot = {
    apiVersion: "argoproj.io/v1alpha1",
    kind: "Application",
    metadata: {
      name: $.clientRootname,
      namespace: "argocd",
      annotations: {
        'argocd.argoproj.io/sync-wave': "-30",
      },
      finalizers: [
        'resources-finalizer.argocd.argoproj.io',
      ],
    },

    spec: {
      destination: $.clientDestination[1],
      project: $.clientProjname,
      source: $.clientRootapprepo,
      syncPolicy: {
        automated: {
          prune: true,
          selfHeal: true,
        },
      },
    },
  },


  apiVersion: "v1",
  kind: "List",
  items: [appProj, appRoot],
}
